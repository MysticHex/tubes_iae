{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\n\n// Get token dari localStorage\nexport const getToken = () => localStorage.getItem('token');\n\n// Validasi token\nexport const validateToken = token => {\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      return null;\n    }\n    return decoded;\n  } catch (error) {\n    return null;\n  }\n};\n\n// Cek apakah user sudah login\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n  return validateToken(token) !== null;\n};\n\n// Ambil data user dari token\nexport const getCurrentUser = () => {\n  const token = getToken();\n  if (!token) return null;\n  return validateToken(token);\n};\n\n// Cek apakah token valid\nexport const isTokenValid = () => {\n  const token = getToken();\n  if (!token) return false;\n  return validateToken(token) !== null;\n};","map":{"version":3,"names":["jwtDecode","getToken","localStorage","getItem","validateToken","token","decoded","currentTime","Date","now","exp","error","isAuthenticated","getCurrentUser","isTokenValid"],"sources":["/Users/andikanajmi/Code/perpustakaan baru 2/perpustakaan/frontend/src/utils/auth.js"],"sourcesContent":["import { jwtDecode } from 'jwt-decode';\n\n// Get token dari localStorage\nexport const getToken = () => localStorage.getItem('token');\n\n// Validasi token\nexport const validateToken = (token) => {\n  try {\n    const decoded = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    \n    if (decoded.exp < currentTime) {\n      return null;\n    }\n    \n    return decoded;\n  } catch (error) {\n    return null;\n  }\n};\n\n// Cek apakah user sudah login\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n  \n  return validateToken(token) !== null;\n};\n\n// Ambil data user dari token\nexport const getCurrentUser = () => {\n  const token = getToken();\n  if (!token) return null;\n  \n  return validateToken(token);\n};\n\n// Cek apakah token valid\nexport const isTokenValid = () => {\n  const token = getToken();\n  if (!token) return false;\n  \n  return validateToken(token) !== null;\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;;AAEtC;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;AAE3D;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtC,IAAI;IACF,MAAMC,OAAO,GAAGN,SAAS,CAACK,KAAK,CAAC;IAChC,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IAErC,IAAIH,OAAO,CAACI,GAAG,GAAGH,WAAW,EAAE;MAC7B,OAAO,IAAI;IACb;IAEA,OAAOD,OAAO;EAChB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMP,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE,OAAO,KAAK;EAExB,OAAOD,aAAa,CAACC,KAAK,CAAC,KAAK,IAAI;AACtC,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMR,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE,OAAO,IAAI;EAEvB,OAAOD,aAAa,CAACC,KAAK,CAAC;AAC7B,CAAC;;AAED;AACA,OAAO,MAAMS,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMT,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE,OAAO,KAAK;EAExB,OAAOD,aAAa,CAACC,KAAK,CAAC,KAAK,IAAI;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}