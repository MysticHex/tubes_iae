{"ast":null,"code":"// src/apollo/clients.js\nimport { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// Fungsi untuk membuat auth link (sama untuk semua service)\nconst createAuthLink = () => {\n  return setContext((_, {\n    headers\n  }) => {\n    const token = localStorage.getItem('token');\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    };\n  });\n};\n\n// Client untuk Mahasiswa Service (auth)\nexport const mahasiswaClient = new ApolloClient({\n  link: createAuthLink().concat(createHttpLink({\n    uri: 'http://localhost:4001/graphql'\n  })),\n  cache: new InMemoryCache()\n});\n\n// Client untuk Buku Service\nexport const bukuClient = new ApolloClient({\n  link: createAuthLink().concat(createHttpLink({\n    uri: 'http://localhost:4002/graphql'\n  })),\n  cache: new InMemoryCache()\n});\n\n// Client untuk Peminjaman Service\nexport const peminjamanClient = new ApolloClient({\n  link: createAuthLink().concat(createHttpLink({\n    uri: 'http://localhost:4003/graphql'\n  })),\n  cache: new InMemoryCache()\n});\n\n// Default client (untuk convenience)\nexport default mahasiswaClient;","map":{"version":3,"names":["ApolloClient","InMemoryCache","createHttpLink","setContext","createAuthLink","_","headers","token","localStorage","getItem","authorization","mahasiswaClient","link","concat","uri","cache","bukuClient","peminjamanClient"],"sources":["/Users/andikanajmi/Code/perpustakaan baru 2/perpustakaan/frontend/src/apollo/clients.js"],"sourcesContent":["// src/apollo/clients.js\nimport { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// Fungsi untuk membuat auth link (sama untuk semua service)\nconst createAuthLink = () => {\n  return setContext((_, { headers }) => {\n    const token = localStorage.getItem('token');\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      }\n    };\n  });\n};\n\n// Client untuk Mahasiswa Service (auth)\nexport const mahasiswaClient = new ApolloClient({\n  link: createAuthLink().concat(\n    createHttpLink({ uri: 'http://localhost:4001/graphql' })\n  ),\n  cache: new InMemoryCache()\n});\n\n// Client untuk Buku Service\nexport const bukuClient = new ApolloClient({\n  link: createAuthLink().concat(\n    createHttpLink({ uri: 'http://localhost:4002/graphql' })\n  ),\n  cache: new InMemoryCache()\n});\n\n// Client untuk Peminjaman Service\nexport const peminjamanClient = new ApolloClient({\n  link: createAuthLink().concat(\n    createHttpLink({ uri: 'http://localhost:4003/graphql' })\n  ),\n  cache: new InMemoryCache()\n});\n\n// Default client (untuk convenience)\nexport default mahasiswaClient;"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAC5E,SAASC,UAAU,QAAQ,6BAA6B;;AAExD;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOD,UAAU,CAAC,CAACE,CAAC,EAAE;IAAEC;EAAQ,CAAC,KAAK;IACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO;MACLH,OAAO,EAAE;QACP,GAAGA,OAAO;QACVI,aAAa,EAAEH,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;MAC7C;IACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,eAAe,GAAG,IAAIX,YAAY,CAAC;EAC9CY,IAAI,EAAER,cAAc,CAAC,CAAC,CAACS,MAAM,CAC3BX,cAAc,CAAC;IAAEY,GAAG,EAAE;EAAgC,CAAC,CACzD,CAAC;EACDC,KAAK,EAAE,IAAId,aAAa,CAAC;AAC3B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMe,UAAU,GAAG,IAAIhB,YAAY,CAAC;EACzCY,IAAI,EAAER,cAAc,CAAC,CAAC,CAACS,MAAM,CAC3BX,cAAc,CAAC;IAAEY,GAAG,EAAE;EAAgC,CAAC,CACzD,CAAC;EACDC,KAAK,EAAE,IAAId,aAAa,CAAC;AAC3B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMgB,gBAAgB,GAAG,IAAIjB,YAAY,CAAC;EAC/CY,IAAI,EAAER,cAAc,CAAC,CAAC,CAACS,MAAM,CAC3BX,cAAc,CAAC;IAAEY,GAAG,EAAE;EAAgC,CAAC,CACzD,CAAC;EACDC,KAAK,EAAE,IAAId,aAAa,CAAC;AAC3B,CAAC,CAAC;;AAEF;AACA,eAAeU,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}